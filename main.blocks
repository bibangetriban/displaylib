<xml xmlns="http://www.w3.org/1999/xhtml">
  <variables>
    <variable id="5=S/k`cW_JQW;EvI?qZ4" type="">dd</variable>
    <variable id="v56U%bN.7OK=7zH)zU+[" type="">duz</variable>
    <variable id="8eN9X[`iEpD9aJ!fl);Y" type="">n</variable>
  </variables>
  <block type="pxt-on-start" y="10" x="0">
    <statement name="HANDLER">
      <block type="typescript_statement" editable="false">
        <mutation declaredvars="duz" numlines="1" line0="let duz = 0"></mutation>
        <field name="LINE0">let duz = 0</field>
        <next>
          <block type="typescript_statement" editable="false">
            <mutation numlines="266" line0="namespace Display {" line38="    //% blockId=scup" line39="    //% block=&quot;scroll bitmap UP za %n pixela&quot;" line40="    //% blockExternalInputs=true" line41="    export function scup(n: number): void {" line42="        ispis(&quot;SBU;&quot; + n.toString());" line43="    }" line44="" line45="    //% weight=96" line46="    //% blockId=scdown" line47="    //% block=&quot;scroll bitmap DOWN za %n pixela&quot;" line48="    //% blockExternalInputs=true" line49="    export function scdown(n: number): void {" line50="        ispis(&quot;SBD;&quot; + n.toString());" line51="    }" line52="" line53="    //% weight=95" line54="    //% blockId=sctxtup" line55="    //% block=&quot;scroll text UP za 1 red sa rotacijom(y/n) %r&quot;" line56="    export function sctxtup(r: string): void {" line57="        switch (r) {" line58="            case (&quot;y&quot;): r = &quot;R&quot;;" line59="            case (&quot;n&quot;): r = null;" line60="            case (&quot;Y&quot;): r = &quot;R&quot;;" line61="            case (&quot;N&quot;): r = null;" line62="            default: r = null;" line63="        }" line64="        ispis(&quot;SCU;&quot; + r);" line65="    }" line66="" line67="    //% weight=94" line68="    //% blockId=sctxtdown" line69="    //% block=&quot;scroll text DOWN za 1 red sa rotacijom(y/n) %r&quot;" line70="    export function sctxtdown(r: string): void {" line71="        switch (r) {" line72="            case (&quot;y&quot;): r = &quot;R&quot;;" line73="            case (&quot;n&quot;): r = null;" line74="            case (&quot;Y&quot;): r = &quot;R&quot;;" line75="            case (&quot;N&quot;): r = null;" line76="            default: r = null;" line77="        }" line78="        ispis(&quot;SCD;&quot; + r);" line79="    }" line80="" line81="    //% weight=93" line82="    //% blockId=ispunaekrana" line83="    //% block=&quot;ispuna ekrana bojom %boja&quot;" line84="    export function ispunaekrana(boja: number): void {" line85="        ispis(&quot;FIL;&quot; + boja.toString());" line86="    }" line87="" line88="    //% weight=92" line89="    //% blockId=ispispix" line90="    //% block=&quot;ispis pixela na poziciju x %x y %y i boje(c/b) %boja&quot;" line91="    export function ispispix(x: number, y: number, boja: string): void {" line92="        switch (boja) {" line93="            case (&quot;c&quot;): boja = &quot;C&quot;;" line94="            case (&quot;b&quot;): boja = &quot;B&quot;;" line95="            default: boja = &quot;C&quot;;" line96="        }" line97="        ispis(&quot;PIX;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + boja);" line98="    }" line99="" line100="    //% weight=91" line101="    //% blockId=brisi" line102="    //% block=&quot;brisi ekran&quot;" line103="    export function brisi(): void {" line104="        ispis(&quot;CLS&quot;);" line105="    }" line106="" line107="    //% weight=90" line108="    //% blockId=kontrast" line109="    //% block=&quot;ispis kontrasta (0-100) %oc&quot;" line110="    export function kontrast(oc: number): void {" line111="        ispis(&quot;CON;&quot; + oc.toString());" line112="    }" line113="" line114="    //% weight=89" line115="    //% blockId=isbuf" line116="    //% block=&quot;ispisi buffer ekrana na display&quot;" line117="    export function isbuf(): void {" line118="        ispis(&quot;DIS&quot;);" line119="    }" line120="" line121="    //% weight=88" line122="    //% blockId=ispistxtpix" line123="    //% block=&quot;ispis texta %tekst na poziciju x %x y %y i boje(c/b) %boja&quot;" line124="    export function ispistxtpix(tekst: string, x: number, y: number): void {" line125="        ispis(tekst + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;G&quot;);" line126="    }" line127="" line128="    //% weight=87" line129="    //% blockId=ispistxt" line130="    //% block=&quot;ispis texta %tekst na stupac x %x i red y %y  boje(c/b) %boja&quot;" line131="    export function ispistxt(tekst: string, x: number, y: number, boja: string): void {" line132="        switch (boja) {" line133="            case (&quot;c&quot;): boja = &quot;C&quot;;" line134="            case (&quot;b&quot;): boja = &quot;B&quot;;" line135="            default: boja = &quot;C&quot;;" line136="        }" line137="        ispis(tekst + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;0;&quot; + boja);" line138="    }" line139="" line140="    //brisanje ne razmim" line141="    //% weight=86" line142="    //% blockId=bristxtpoz" line143="    //% block=&quot;brisanje texta od %tekst slova na stupac x %x i red y %y&quot;" line144="    export function bristxtpoz(tekst: string, x: number, y: number, boja: string): void {" line145="        let ispuna = [];" line146="        for (let i = 0; i &lt; tekst.length; i++) {" line147="            ispuna.push(&quot; &quot;);" line148="        }" line149="        let celo = ispuna.join(&quot;&quot;);" line150="        ispis(celo + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;0;&quot;);" line151="    }" line152="" line153="" line154="    //% weight=85" line155="    //% blockId=bitscrolltxt" line156="    //% block=&quot;bit scroll strane(L/D) %str od reda %x do reda %y sa rotacijom ili bez(y/n) %r&quot;" line157="    export function bitscrolltxt(str: string, x: number, y: number, r: string): void {" line158="        switch (str) {" line159="            case (&quot;l&quot;): str = &quot;L&quot;;" line160="            case (&quot;d&quot;): str = &quot;D&quot;;" line161="            default: str = &quot;D&quot;;" line162="        }" line163="" line164="        switch (r) {" line165="            case (&quot;y&quot;): r = &quot;R&quot;;" line166="            case (&quot;n&quot;): r = null;" line167="            case (&quot;Y&quot;): r = &quot;R&quot;;" line168="            case (&quot;N&quot;): r = null;" line169="            default: r = null;" line170="        }" line171="" line172="        ispis(&quot;SCC;&quot; + str + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + r);" line173="    }" line174="" line175="" line176="    //% weight=84" line177="    //% blockId=lin" line178="    //% block=&quot;iscrtavanje linije od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 sa bojom(C/B) %boja&quot;" line179="    export function lin(x1: number, y1: number, x2: number, y2: number, boja: string): void {" line180="        switch (boja) {" line181="            case (&quot;c&quot;): boja = &quot;C&quot;;" line182="            case (&quot;b&quot;): boja = &quot;B&quot;;" line183="            default: boja = &quot;C&quot;;" line184="        }" line185="" line186="        ispis(&quot;LIN;&quot; + x1.toString() + &quot;;&quot; + y1.toString() + &quot;;&quot; + x2.toString() + &quot;;&quot; + y2.toString() + &quot;;&quot; + boja);" line187="    }" line188="" line189="    //% weight=83" line190="    //% blockId=kruz" line191="    //% block=&quot;iscrtavanje kruznice na x %x y %y radiusa %r sa bojom(C/B) %boja&quot;" line192="    export function kruz(x: number, y: number, r: number, boja: string): void {" line193="        switch (boja) {" line194="            case (&quot;c&quot;): boja = &quot;C&quot;;" line195="            case (&quot;b&quot;): boja = &quot;B&quot;;" line196="            default: boja = &quot;C&quot;;" line197="        }" line198="" line199="        ispis(&quot;CIR;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + r.toString() + &quot;;&quot; + boja);" line200="    }" line201="" line202="    //% weight=82" line203="    //% blockId=krug" line204="    //% block=&quot;iscrtavanje kruga na x %x y %y radiusa %r punjenog bojom(C/B) %fill i boje(C/B) %boja&quot;" line205="    export function krug(x: number, y: number, r: number, fill: string, boja: string): void {" line206="        switch (fill) {" line207="            case (&quot;c&quot;): fill = &quot;C&quot;;" line208="            case (&quot;b&quot;): fill = &quot;B&quot;;" line209="            default: fill = &quot;C&quot;;" line210="        }" line211="" line212="        switch (boja) {" line213="            case (&quot;c&quot;): boja = &quot;C&quot;;" line214="            case (&quot;b&quot;): boja = &quot;B&quot;;" line215="            default: boja = &quot;C&quot;;" line216="        }" line217="" line218="        ispis(&quot;CIR;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + r.toString() + &quot;;&quot; + fill + &quot;;&quot; + boja);" line219="    }" line220="" line221="    //% weight=81" line222="    //% blockId=kvad" line223="    //% block=&quot;iscrtavanje kvadrata od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 sa bojom(C/B) %boja&quot;" line224="    export function kvad(x1: number, y1: number, x2: number, y2: number, boja: string): void {" line225="        switch (boja) {" line226="            case (&quot;c&quot;): boja = &quot;C&quot;;" line227="            case (&quot;b&quot;): boja = &quot;B&quot;;" line228="            default: boja = &quot;C&quot;;" line229="        }" line230="" line231="        ispis(&quot;REC;&quot; + x1.toString() + &quot;;&quot; + y1.toString() + &quot;;&quot; + x2.toString() + &quot;;&quot; + y2.toString() + &quot;;&quot; + boja);" line232="    }" line233="" line234="    //% weight=81" line235="    //% blockId=tro" line236="    //% block=&quot;iscrtavanje trokuta od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 do x3 %x3 y3 %y3 sa bojom(C/B) %boja&quot;" line237="    export function tro(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, boja: string): void {" line238="        switch (boja) {" line239="            case (&quot;c&quot;): boja = &quot;C&quot;;" line240="            case (&quot;b&quot;): boja = &quot;B&quot;;" line241="            default: boja = &quot;C&quot;;" line242="        }" line243="" line244="        ispis(&quot;TRI;&quot; + x1.toString() + &quot;;&quot; + y1.toString() + &quot;;&quot; + x2.toString() + &quot;;&quot; + y2.toString() + &quot;;&quot; + x3.toString() + &quot;;&quot; + y3.toString() + &quot;;&quot; + boja);" line245="    }" line246="" line247="    //% weight=80" line248="    //% blockId=troisp" line249="    //% block=&quot;iscrtavanje trokuta od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 do x3 %x3 y3 %y3 sa ispunom(C/B) %fill i bojom(C/B) %boja&quot;" line250="    export function troisp(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, fill: string, boja: string): void {" line251="        switch (boja) {" line252="            case (&quot;c&quot;): boja = &quot;C&quot;;" line253="            case (&quot;b&quot;): boja = &quot;B&quot;;" line254="            default: boja = &quot;C&quot;;" line255="        }" line256="" line257="        switch (fill) {" line258="            case (&quot;c&quot;): fill = &quot;C&quot;;" line259="            case (&quot;b&quot;): fill = &quot;B&quot;;" line260="            default: fill = &quot;C&quot;;" line261="        }" line262="" line263="        ispis(&quot;TRI;&quot; + x1.toString() + &quot;;&quot; + y1.toString() + &quot;;&quot; + x2.toString() + &quot;;&quot; + y2.toString() + &quot;;&quot; + x3.toString() + &quot;;&quot; + y3.toString() + &quot;;&quot; + fill + &quot;;&quot; + boja);" line264="    }" line265="}" line1="" line2="" line3="    //% weight=100" line4="    //% blockId=bit16" line5="    //% block=&quot;iscrtaj bitmapu 16x16 broja %n na poziciji  x %x i  y %y| i boje(c/b) %boja&quot;" line6="    //% blockExternalInputs=true" line7="    export function bit16(n: number, x: number, y: number, boja: string): void {" line8="        switch (boja) {" line9="            case (&quot;c&quot;): boja = &quot;C&quot;;" line10="            case (&quot;b&quot;): boja = &quot;B&quot;;" line11="            default: boja = &quot;C&quot;;" line12="        }" line13="        ispis(&quot;B16;&quot; + n.toString() + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + boja);" line14="    }" line15="" line24="    //% weight=98" line23="" line22="    }" line21="        ispis(&quot;BIT;&quot; + n.toString() + &quot;;&quot; + boja1.toString() + &quot;;&quot; + boja2.toString() + &quot;;&quot; + boja3.toString() + &quot;;&quot; + boja4.toString() + &quot;;&quot; + boja5.toString() + &quot;;&quot; + boja6.toString() + &quot;;&quot; + boja7.toString());" line20="    export function bit8x8(n: number, boja1: number, boja2: number, boja3: number, boja4: number, boja5: number, boja6: number, boja7: number, ): void {" line19="    //% blockExternalInputs=true" line18="    //% block=&quot;definiraj bitmapu 8x8 brojem(0-9) %n i sedam boja(0-255) %boja1 %boja2 %boja3 %boja4 %boja5 %boja6 %boja7&quot;" line17="    //% blockId=bit8x8" line16="    //% weight=99" line37="    //% weight=97" line36="" line35="    }" line34="        ispis(&quot;SPR;&quot; + n.toString() + &quot;;&quot; + x.toString() + &quot;;&quot; + y.toString() + &quot;;&quot; + boja);" line33="        }" line32="            default: boja = &quot;C&quot;;" line31="            case (&quot;b&quot;): boja = &quot;B&quot;;" line30="            case (&quot;c&quot;): boja = &quot;C&quot;;" line29="        switch (boja) {" line28="    export function isbit8x8(n: number, x: number, y: number, boja: string): void {" line27="    //% blockExternalInputs=true" line26="    //% block=&quot;ispisi definiranu bitmapu 8x8 (0-9) %n na poziciji  x %x i  y %y| i boje(c/b) %boja&quot;" line25="    //% blockId=isbit8x8"></mutation>
            <field name="LINE0">namespace Display {</field>
            <field name="LINE1"></field>
            <field name="LINE2"></field>
            <field name="LINE3">    //% weight=100</field>
            <field name="LINE4">    //% blockId=bit16</field>
            <field name="LINE5">    //% block="iscrtaj bitmapu 16x16 broja %n na poziciji  x %x i  y %y| i boje(c/b) %boja"</field>
            <field name="LINE6">    //% blockExternalInputs=true</field>
            <field name="LINE7">    export function bit16(n: number, x: number, y: number, boja: string): void {</field>
            <field name="LINE8">        switch (boja) {</field>
            <field name="LINE9">            case ("c"): boja = "C";</field>
            <field name="LINE10">            case ("b"): boja = "B";</field>
            <field name="LINE11">            default: boja = "C";</field>
            <field name="LINE12">        }</field>
            <field name="LINE13">        ispis("B16;" + n.toString() + ";" + x.toString() + ";" + y.toString() + ";" + boja);</field>
            <field name="LINE14">    }</field>
            <field name="LINE15"></field>
            <field name="LINE16">    //% weight=99</field>
            <field name="LINE17">    //% blockId=bit8x8</field>
            <field name="LINE18">    //% block="definiraj bitmapu 8x8 brojem(0-9) %n i sedam boja(0-255) %boja1 %boja2 %boja3 %boja4 %boja5 %boja6 %boja7"</field>
            <field name="LINE19">    //% blockExternalInputs=true</field>
            <field name="LINE20">    export function bit8x8(n: number, boja1: number, boja2: number, boja3: number, boja4: number, boja5: number, boja6: number, boja7: number, ): void {</field>
            <field name="LINE21">        ispis("BIT;" + n.toString() + ";" + boja1.toString() + ";" + boja2.toString() + ";" + boja3.toString() + ";" + boja4.toString() + ";" + boja5.toString() + ";" + boja6.toString() + ";" + boja7.toString());</field>
            <field name="LINE22">    }</field>
            <field name="LINE23"></field>
            <field name="LINE24">    //% weight=98</field>
            <field name="LINE25">    //% blockId=isbit8x8</field>
            <field name="LINE26">    //% block="ispisi definiranu bitmapu 8x8 (0-9) %n na poziciji  x %x i  y %y| i boje(c/b) %boja"</field>
            <field name="LINE27">    //% blockExternalInputs=true</field>
            <field name="LINE28">    export function isbit8x8(n: number, x: number, y: number, boja: string): void {</field>
            <field name="LINE29">        switch (boja) {</field>
            <field name="LINE30">            case ("c"): boja = "C";</field>
            <field name="LINE31">            case ("b"): boja = "B";</field>
            <field name="LINE32">            default: boja = "C";</field>
            <field name="LINE33">        }</field>
            <field name="LINE34">        ispis("SPR;" + n.toString() + ";" + x.toString() + ";" + y.toString() + ";" + boja);</field>
            <field name="LINE35">    }</field>
            <field name="LINE36"></field>
            <field name="LINE37">    //% weight=97</field>
            <field name="LINE38">    //% blockId=scup</field>
            <field name="LINE39">    //% block="scroll bitmap UP za %n pixela"</field>
            <field name="LINE40">    //% blockExternalInputs=true</field>
            <field name="LINE41">    export function scup(n: number): void {</field>
            <field name="LINE42">        ispis("SBU;" + n.toString());</field>
            <field name="LINE43">    }</field>
            <field name="LINE44"></field>
            <field name="LINE45">    //% weight=96</field>
            <field name="LINE46">    //% blockId=scdown</field>
            <field name="LINE47">    //% block="scroll bitmap DOWN za %n pixela"</field>
            <field name="LINE48">    //% blockExternalInputs=true</field>
            <field name="LINE49">    export function scdown(n: number): void {</field>
            <field name="LINE50">        ispis("SBD;" + n.toString());</field>
            <field name="LINE51">    }</field>
            <field name="LINE52"></field>
            <field name="LINE53">    //% weight=95</field>
            <field name="LINE54">    //% blockId=sctxtup</field>
            <field name="LINE55">    //% block="scroll text UP za 1 red sa rotacijom(y/n) %r"</field>
            <field name="LINE56">    export function sctxtup(r: string): void {</field>
            <field name="LINE57">        switch (r) {</field>
            <field name="LINE58">            case ("y"): r = "R";</field>
            <field name="LINE59">            case ("n"): r = null;</field>
            <field name="LINE60">            case ("Y"): r = "R";</field>
            <field name="LINE61">            case ("N"): r = null;</field>
            <field name="LINE62">            default: r = null;</field>
            <field name="LINE63">        }</field>
            <field name="LINE64">        ispis("SCU;" + r);</field>
            <field name="LINE65">    }</field>
            <field name="LINE66"></field>
            <field name="LINE67">    //% weight=94</field>
            <field name="LINE68">    //% blockId=sctxtdown</field>
            <field name="LINE69">    //% block="scroll text DOWN za 1 red sa rotacijom(y/n) %r"</field>
            <field name="LINE70">    export function sctxtdown(r: string): void {</field>
            <field name="LINE71">        switch (r) {</field>
            <field name="LINE72">            case ("y"): r = "R";</field>
            <field name="LINE73">            case ("n"): r = null;</field>
            <field name="LINE74">            case ("Y"): r = "R";</field>
            <field name="LINE75">            case ("N"): r = null;</field>
            <field name="LINE76">            default: r = null;</field>
            <field name="LINE77">        }</field>
            <field name="LINE78">        ispis("SCD;" + r);</field>
            <field name="LINE79">    }</field>
            <field name="LINE80"></field>
            <field name="LINE81">    //% weight=93</field>
            <field name="LINE82">    //% blockId=ispunaekrana</field>
            <field name="LINE83">    //% block="ispuna ekrana bojom %boja"</field>
            <field name="LINE84">    export function ispunaekrana(boja: number): void {</field>
            <field name="LINE85">        ispis("FIL;" + boja.toString());</field>
            <field name="LINE86">    }</field>
            <field name="LINE87"></field>
            <field name="LINE88">    //% weight=92</field>
            <field name="LINE89">    //% blockId=ispispix</field>
            <field name="LINE90">    //% block="ispis pixela na poziciju x %x y %y i boje(c/b) %boja"</field>
            <field name="LINE91">    export function ispispix(x: number, y: number, boja: string): void {</field>
            <field name="LINE92">        switch (boja) {</field>
            <field name="LINE93">            case ("c"): boja = "C";</field>
            <field name="LINE94">            case ("b"): boja = "B";</field>
            <field name="LINE95">            default: boja = "C";</field>
            <field name="LINE96">        }</field>
            <field name="LINE97">        ispis("PIX;" + x.toString() + ";" + y.toString() + ";" + boja);</field>
            <field name="LINE98">    }</field>
            <field name="LINE99"></field>
            <field name="LINE100">    //% weight=91</field>
            <field name="LINE101">    //% blockId=brisi</field>
            <field name="LINE102">    //% block="brisi ekran"</field>
            <field name="LINE103">    export function brisi(): void {</field>
            <field name="LINE104">        ispis("CLS");</field>
            <field name="LINE105">    }</field>
            <field name="LINE106"></field>
            <field name="LINE107">    //% weight=90</field>
            <field name="LINE108">    //% blockId=kontrast</field>
            <field name="LINE109">    //% block="ispis kontrasta (0-100) %oc"</field>
            <field name="LINE110">    export function kontrast(oc: number): void {</field>
            <field name="LINE111">        ispis("CON;" + oc.toString());</field>
            <field name="LINE112">    }</field>
            <field name="LINE113"></field>
            <field name="LINE114">    //% weight=89</field>
            <field name="LINE115">    //% blockId=isbuf</field>
            <field name="LINE116">    //% block="ispisi buffer ekrana na display"</field>
            <field name="LINE117">    export function isbuf(): void {</field>
            <field name="LINE118">        ispis("DIS");</field>
            <field name="LINE119">    }</field>
            <field name="LINE120"></field>
            <field name="LINE121">    //% weight=88</field>
            <field name="LINE122">    //% blockId=ispistxtpix</field>
            <field name="LINE123">    //% block="ispis texta %tekst na poziciju x %x y %y i boje(c/b) %boja"</field>
            <field name="LINE124">    export function ispistxtpix(tekst: string, x: number, y: number): void {</field>
            <field name="LINE125">        ispis(tekst + ";" + x.toString() + ";" + y.toString() + ";G");</field>
            <field name="LINE126">    }</field>
            <field name="LINE127"></field>
            <field name="LINE128">    //% weight=87</field>
            <field name="LINE129">    //% blockId=ispistxt</field>
            <field name="LINE130">    //% block="ispis texta %tekst na stupac x %x i red y %y  boje(c/b) %boja"</field>
            <field name="LINE131">    export function ispistxt(tekst: string, x: number, y: number, boja: string): void {</field>
            <field name="LINE132">        switch (boja) {</field>
            <field name="LINE133">            case ("c"): boja = "C";</field>
            <field name="LINE134">            case ("b"): boja = "B";</field>
            <field name="LINE135">            default: boja = "C";</field>
            <field name="LINE136">        }</field>
            <field name="LINE137">        ispis(tekst + ";" + x.toString() + ";" + y.toString() + ";0;" + boja);</field>
            <field name="LINE138">    }</field>
            <field name="LINE139"></field>
            <field name="LINE140">    //brisanje ne razmim</field>
            <field name="LINE141">    //% weight=86</field>
            <field name="LINE142">    //% blockId=bristxtpoz</field>
            <field name="LINE143">    //% block="brisanje texta od %tekst slova na stupac x %x i red y %y"</field>
            <field name="LINE144">    export function bristxtpoz(tekst: string, x: number, y: number, boja: string): void {</field>
            <field name="LINE145">        let ispuna = [];</field>
            <field name="LINE146">        for (let i = 0; i &lt; tekst.length; i++) {</field>
            <field name="LINE147">            ispuna.push(" ");</field>
            <field name="LINE148">        }</field>
            <field name="LINE149">        let celo = ispuna.join("");</field>
            <field name="LINE150">        ispis(celo + ";" + x.toString() + ";" + y.toString() + ";0;");</field>
            <field name="LINE151">    }</field>
            <field name="LINE152"></field>
            <field name="LINE153"></field>
            <field name="LINE154">    //% weight=85</field>
            <field name="LINE155">    //% blockId=bitscrolltxt</field>
            <field name="LINE156">    //% block="bit scroll strane(L/D) %str od reda %x do reda %y sa rotacijom ili bez(y/n) %r"</field>
            <field name="LINE157">    export function bitscrolltxt(str: string, x: number, y: number, r: string): void {</field>
            <field name="LINE158">        switch (str) {</field>
            <field name="LINE159">            case ("l"): str = "L";</field>
            <field name="LINE160">            case ("d"): str = "D";</field>
            <field name="LINE161">            default: str = "D";</field>
            <field name="LINE162">        }</field>
            <field name="LINE163"></field>
            <field name="LINE164">        switch (r) {</field>
            <field name="LINE165">            case ("y"): r = "R";</field>
            <field name="LINE166">            case ("n"): r = null;</field>
            <field name="LINE167">            case ("Y"): r = "R";</field>
            <field name="LINE168">            case ("N"): r = null;</field>
            <field name="LINE169">            default: r = null;</field>
            <field name="LINE170">        }</field>
            <field name="LINE171"></field>
            <field name="LINE172">        ispis("SCC;" + str + ";" + x.toString() + ";" + y.toString() + ";" + r);</field>
            <field name="LINE173">    }</field>
            <field name="LINE174"></field>
            <field name="LINE175"></field>
            <field name="LINE176">    //% weight=84</field>
            <field name="LINE177">    //% blockId=lin</field>
            <field name="LINE178">    //% block="iscrtavanje linije od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 sa bojom(C/B) %boja"</field>
            <field name="LINE179">    export function lin(x1: number, y1: number, x2: number, y2: number, boja: string): void {</field>
            <field name="LINE180">        switch (boja) {</field>
            <field name="LINE181">            case ("c"): boja = "C";</field>
            <field name="LINE182">            case ("b"): boja = "B";</field>
            <field name="LINE183">            default: boja = "C";</field>
            <field name="LINE184">        }</field>
            <field name="LINE185"></field>
            <field name="LINE186">        ispis("LIN;" + x1.toString() + ";" + y1.toString() + ";" + x2.toString() + ";" + y2.toString() + ";" + boja);</field>
            <field name="LINE187">    }</field>
            <field name="LINE188"></field>
            <field name="LINE189">    //% weight=83</field>
            <field name="LINE190">    //% blockId=kruz</field>
            <field name="LINE191">    //% block="iscrtavanje kruznice na x %x y %y radiusa %r sa bojom(C/B) %boja"</field>
            <field name="LINE192">    export function kruz(x: number, y: number, r: number, boja: string): void {</field>
            <field name="LINE193">        switch (boja) {</field>
            <field name="LINE194">            case ("c"): boja = "C";</field>
            <field name="LINE195">            case ("b"): boja = "B";</field>
            <field name="LINE196">            default: boja = "C";</field>
            <field name="LINE197">        }</field>
            <field name="LINE198"></field>
            <field name="LINE199">        ispis("CIR;" + x.toString() + ";" + y.toString() + ";" + r.toString() + ";" + boja);</field>
            <field name="LINE200">    }</field>
            <field name="LINE201"></field>
            <field name="LINE202">    //% weight=82</field>
            <field name="LINE203">    //% blockId=krug</field>
            <field name="LINE204">    //% block="iscrtavanje kruga na x %x y %y radiusa %r punjenog bojom(C/B) %fill i boje(C/B) %boja"</field>
            <field name="LINE205">    export function krug(x: number, y: number, r: number, fill: string, boja: string): void {</field>
            <field name="LINE206">        switch (fill) {</field>
            <field name="LINE207">            case ("c"): fill = "C";</field>
            <field name="LINE208">            case ("b"): fill = "B";</field>
            <field name="LINE209">            default: fill = "C";</field>
            <field name="LINE210">        }</field>
            <field name="LINE211"></field>
            <field name="LINE212">        switch (boja) {</field>
            <field name="LINE213">            case ("c"): boja = "C";</field>
            <field name="LINE214">            case ("b"): boja = "B";</field>
            <field name="LINE215">            default: boja = "C";</field>
            <field name="LINE216">        }</field>
            <field name="LINE217"></field>
            <field name="LINE218">        ispis("CIR;" + x.toString() + ";" + y.toString() + ";" + r.toString() + ";" + fill + ";" + boja);</field>
            <field name="LINE219">    }</field>
            <field name="LINE220"></field>
            <field name="LINE221">    //% weight=81</field>
            <field name="LINE222">    //% blockId=kvad</field>
            <field name="LINE223">    //% block="iscrtavanje kvadrata od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 sa bojom(C/B) %boja"</field>
            <field name="LINE224">    export function kvad(x1: number, y1: number, x2: number, y2: number, boja: string): void {</field>
            <field name="LINE225">        switch (boja) {</field>
            <field name="LINE226">            case ("c"): boja = "C";</field>
            <field name="LINE227">            case ("b"): boja = "B";</field>
            <field name="LINE228">            default: boja = "C";</field>
            <field name="LINE229">        }</field>
            <field name="LINE230"></field>
            <field name="LINE231">        ispis("REC;" + x1.toString() + ";" + y1.toString() + ";" + x2.toString() + ";" + y2.toString() + ";" + boja);</field>
            <field name="LINE232">    }</field>
            <field name="LINE233"></field>
            <field name="LINE234">    //% weight=81</field>
            <field name="LINE235">    //% blockId=tro</field>
            <field name="LINE236">    //% block="iscrtavanje trokuta od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 do x3 %x3 y3 %y3 sa bojom(C/B) %boja"</field>
            <field name="LINE237">    export function tro(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, boja: string): void {</field>
            <field name="LINE238">        switch (boja) {</field>
            <field name="LINE239">            case ("c"): boja = "C";</field>
            <field name="LINE240">            case ("b"): boja = "B";</field>
            <field name="LINE241">            default: boja = "C";</field>
            <field name="LINE242">        }</field>
            <field name="LINE243"></field>
            <field name="LINE244">        ispis("TRI;" + x1.toString() + ";" + y1.toString() + ";" + x2.toString() + ";" + y2.toString() + ";" + x3.toString() + ";" + y3.toString() + ";" + boja);</field>
            <field name="LINE245">    }</field>
            <field name="LINE246"></field>
            <field name="LINE247">    //% weight=80</field>
            <field name="LINE248">    //% blockId=troisp</field>
            <field name="LINE249">    //% block="iscrtavanje trokuta od x1 %x1 y1 %y1 do x2 %x2 y2 %y2 do x3 %x3 y3 %y3 sa ispunom(C/B) %fill i bojom(C/B) %boja"</field>
            <field name="LINE250">    export function troisp(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, fill: string, boja: string): void {</field>
            <field name="LINE251">        switch (boja) {</field>
            <field name="LINE252">            case ("c"): boja = "C";</field>
            <field name="LINE253">            case ("b"): boja = "B";</field>
            <field name="LINE254">            default: boja = "C";</field>
            <field name="LINE255">        }</field>
            <field name="LINE256"></field>
            <field name="LINE257">        switch (fill) {</field>
            <field name="LINE258">            case ("c"): fill = "C";</field>
            <field name="LINE259">            case ("b"): fill = "B";</field>
            <field name="LINE260">            default: fill = "C";</field>
            <field name="LINE261">        }</field>
            <field name="LINE262"></field>
            <field name="LINE263">        ispis("TRI;" + x1.toString() + ";" + y1.toString() + ";" + x2.toString() + ";" + y2.toString() + ";" + x3.toString() + ";" + y3.toString() + ";" + fill + ";" + boja);</field>
            <field name="LINE264">    }</field>
            <field name="LINE265">}</field>
          </block>
        </next>
      </block>
    </statement>
  </block>
  <block type="function_definition" y="16" x="1019">
    <mutation name="ispis" functionid="kO7aV]3pg`gwh0|lsBfN">
      <arg id="wg23m0a1bjch3c023u8y" type="string" name="tekst"></arg>
    </mutation>
    <field name="function_title">function</field>
    <field name="function_name">ispis</field>
    <value name="wg23m0a1bjch3c023u8y">
      <shadow type="argument_reporter_string">
        <field name="VALUE">tekst</field>
      </shadow>
    </value>
    <statement name="STACK">
      <block type="variables_set">
        <field id="5=S/k`cW_JQW;EvI?qZ4" name="VAR" variabletype="">dd</field>
        <value name="VALUE">
          <shadow type="math_number">
            <field name="NUM">0</field>
          </shadow>
          <block type="text_length">
            <value name="VALUE">
              <block type="argument_reporter_string">
                <field name="VALUE">tekst</field>
              </block>
            </value>
          </block>
        </value>
        <next>
          <block type="controls_if">
            <mutation else="1"></mutation>
            <value name="IF0">
              <shadow type="logic_boolean">
                <field name="BOOL">TRUE</field>
              </shadow>
              <block type="logic_compare">
                <field name="OP">LT</field>
                <value name="A">
                  <shadow type="math_number">
                    <field name="NUM">0</field>
                  </shadow>
                  <block type="variables_get">
                    <field id="5=S/k`cW_JQW;EvI?qZ4" name="VAR" variabletype="">dd</field>
                  </block>
                </value>
                <value name="B">
                  <shadow type="math_number">
                    <field name="NUM">31</field>
                  </shadow>
                </value>
              </block>
            </value>
            <statement name="DO0">
              <block type="function_call">
                <mutation name="salji" functionid="3V8E9ge3N|!9~bx9hi-k">
                  <arg id="81jqlvhprytjdiaihoftvd" type="string" name="tekst"></arg>
                </mutation>
                <field name="function_title">call</field>
                <field name="function_name">salji</field>
                <value name="81jqlvhprytjdiaihoftvd">
                  <shadow id="mH#J4FOB{G,Eu(8%VmGX" type="text">
                    <field name="TEXT">abc</field>
                  </shadow>
                  <block type="argument_reporter_string">
                    <field name="VALUE">tekst</field>
                  </block>
                </value>
              </block>
            </statement>
            <statement name="ELSE">
              <block type="function_call">
                <mutation name="salji" functionid="3V8E9ge3N|!9~bx9hi-k">
                  <arg id="81jqlvhprytjdiaihoftvd" type="string" name="tekst"></arg>
                </mutation>
                <field name="function_title">call</field>
                <field name="function_name">salji</field>
                <value name="81jqlvhprytjdiaihoftvd">
                  <shadow id="IAeP$u?b:kLDf8uS)HM?" type="text">
                    <field name="TEXT">abc</field>
                  </shadow>
                  <block type="text_join">
                    <mutation items="3"></mutation>
                    <value name="ADD0">
                      <shadow type="text">
                        <field name="TEXT"></field>
                      </shadow>
                    </value>
                    <value name="ADD1">
                      <shadow type="text">
                        <field name="TEXT"></field>
                      </shadow>
                      <block type="string_substr">
                        <value name="this">
                          <shadow type="text">
                            <field name="TEXT"></field>
                          </shadow>
                          <block type="argument_reporter_string">
                            <field name="VALUE">tekst</field>
                          </block>
                        </value>
                        <value name="start">
                          <shadow type="math_number">
                            <field name="NUM">0</field>
                          </shadow>
                        </value>
                        <value name="length">
                          <shadow type="math_number">
                            <field name="NUM">30</field>
                          </shadow>
                        </value>
                      </block>
                    </value>
                    <value name="ADD2">
                      <shadow type="text">
                        <field name="TEXT">+</field>
                      </shadow>
                    </value>
                  </block>
                </value>
                <next>
                  <block type="function_call">
                    <mutation name="salji" functionid="3V8E9ge3N|!9~bx9hi-k">
                      <arg id="81jqlvhprytjdiaihoftvd" type="string" name="tekst"></arg>
                    </mutation>
                    <field name="function_title">call</field>
                    <field name="function_name">salji</field>
                    <value name="81jqlvhprytjdiaihoftvd">
                      <shadow id="*XG~teWh_P:aHiP98DhV" type="text">
                        <field name="TEXT">abc</field>
                      </shadow>
                      <block type="string_substr">
                        <value name="this">
                          <shadow type="text">
                            <field name="TEXT"></field>
                          </shadow>
                          <block type="argument_reporter_string">
                            <field name="VALUE">tekst</field>
                          </block>
                        </value>
                        <value name="start">
                          <shadow type="math_number">
                            <field name="NUM">30</field>
                          </shadow>
                        </value>
                        <value name="length">
                          <block type="variables_get">
                            <field id="5=S/k`cW_JQW;EvI?qZ4" name="VAR" variabletype="">dd</field>
                          </block>
                        </value>
                      </block>
                    </value>
                  </block>
                </next>
              </block>
            </statement>
          </block>
        </next>
      </block>
    </statement>
  </block>
  <block type="function_definition" y="669" x="952">
    <mutation name="salji" functionid="3V8E9ge3N|!9~bx9hi-k">
      <arg id="81jqlvhprytjdiaihoftvd" type="string" name="tekst"></arg>
    </mutation>
    <field name="function_title">function</field>
    <field name="function_name">salji</field>
    <value name="81jqlvhprytjdiaihoftvd">
      <shadow type="argument_reporter_string">
        <field name="VALUE">tekst</field>
      </shadow>
    </value>
    <statement name="STACK">
      <block type="variables_set">
        <field id="v56U%bN.7OK=7zH)zU+[" name="VAR" variabletype="">duz</field>
        <value name="VALUE">
          <shadow type="math_number">
            <field name="NUM">0</field>
          </shadow>
          <block type="text_length">
            <value name="VALUE">
              <block type="argument_reporter_string">
                <field name="VALUE">tekst</field>
              </block>
            </value>
          </block>
        </value>
        <next>
          <block type="typescript_statement" editable="false">
            <mutation declaredvars="buf" numlines="1" line0="let buf = pins.createBuffer(duz);"></mutation>
            <field name="LINE0">let buf = pins.createBuffer(duz);</field>
            <next>
              <block type="pxt_controls_for">
                <value name="VAR">
                  <shadow type="variables_get_reporter">
                    <field id="8eN9X[`iEpD9aJ!fl);Y" name="VAR" variabletype="">n</field>
                  </shadow>
                </value>
                <value name="TO">
                  <shadow type="math_whole_number">
                    <field name="NUM">0</field>
                  </shadow>
                  <block type="math_arithmetic">
                    <field name="OP">MINUS</field>
                    <value name="A">
                      <shadow type="math_number">
                        <field name="NUM">0</field>
                      </shadow>
                      <block type="variables_get">
                        <field id="v56U%bN.7OK=7zH)zU+[" name="VAR" variabletype="">duz</field>
                      </block>
                    </value>
                    <value name="B">
                      <shadow type="math_number">
                        <field name="NUM">1</field>
                      </shadow>
                    </value>
                  </block>
                </value>
                <statement name="DO">
                  <block type="typescript_statement" editable="false">
                    <mutation declaredvars="bb" numlines="1" line0="let bb = tekst.charCodeAt(n);"></mutation>
                    <field name="LINE0">let bb = tekst.charCodeAt(n);</field>
                    <next>
                      <block type="typescript_statement" editable="false">
                        <mutation numlines="1" line0="buf.setNumber(NumberFormat.UInt8LE, n, bb);"></mutation>
                        <field name="LINE0">buf.setNumber(NumberFormat.UInt8LE, n, bb);</field>
                      </block>
                    </next>
                  </block>
                </statement>
                <next>
                  <block type="typescript_statement" editable="false">
                    <mutation numlines="1" line0="pins.i2cWriteBuffer(0x99, buf, false);"></mutation>
                    <field name="LINE0">pins.i2cWriteBuffer(0x99, buf, false);</field>
                    <next>
                      <block type="device_pause">
                        <value name="pause">
                          <shadow type="timePicker">
                            <field name="ms">30</field>
                          </shadow>
                        </value>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </next>
          </block>
        </next>
      </block>
    </statement>
  </block>
  <block type="device_button_event" y="2114" x="273">
    <field name="NAME">Button.A</field>
  </block>
</xml>